{"version":3,"sources":["main.js","webgl.js","objects/Cover.js","objects/Cube.js","objects/CubeCover.js","objects/Vinyl.js"],"names":[],"mappingsnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrzTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"app.min.js","sourcesContent":["var webgl, gui;\n// initialize index for vinyl reading\nvar index = 0;\nvar indexCover = 0;\nvar indexMax = 79;\nvar indexMaxCover = 143;\nvar playing = false;\n\nvar mouseAlreadyMoved = false;\nvar controlsEnabled = false;\n\nvar moved = false;\nvar movingEnabled = true;\n\nvar coverAlreadyAdded = false;\n\nvar sceneEnded = false;\n\nvar glitchActivated = false;\n\n// the setinterval for playing\nvar timer;\n\n// http://stemkoski.github.io/Three.js/Shader-Glow.html\n// http://www.jeux2notes.fr/jeux2notes/Jeux_video_files/tetrisflute.pdf\n\n$(document).ready(init);\n\nfunction init(){\n    webgl = new Webgl(window.innerWidth, window.innerHeight);\n    $('.three').append(webgl.renderer.domElement);\n\n    gui = new dat.GUI();\n    gui.close();\n\n    $(window).on('resize', resizeHandler);\n\n    // zoom on mouse wheel\n    // document.body.addEventListener('mousewheel', mousewheel, false);\n    // document.body.addEventListener('DOMMouseScroll', mousewheel, false); // firefox\n\n    document.body.addEventListener('mousemove', mousemove);\n\n    var k = [71, 76, 73, 84, 67, 72];  \n    var n = 0; \n\n    // events on keyboard\n    $(window).keydown(function(e) {\n        if (e.keyCode === k[n++]) {  \n            if (n === k.length) { \n                if(!glitchActivated) {\n                    glitchActivated = true;\n                    n = 0;\n                }\n                else {\n                    glitchActivated = false;\n                    n = 0;\n                }\n            }  \n        }\n        else if(e.keyCode == 37 && !playing && controlsEnabled) { // left\n            n = 0;\n            if(index < indexMax+1 && !moved) {\n                webgl.goRight(index);\n                index++;\n            }\n            else if(indexCover > 1 && moved) {\n                webgl.goLeftCover(indexCover);\n                indexCover--;\n            }\n        }\n        else if(e.keyCode == 39 && !playing && controlsEnabled) { // right\n            n = 0;\n            if(index > 1 && !moved) {\n                webgl.goLeft(index);\n                index--;\n            }\n            else if(indexCover < indexMaxCover+1 && moved) {\n                webgl.goRightCover(indexCover);\n                indexCover++;\n            }\n        }\n        else if(e.keyCode == 38 && !playing) { // up\n            n = 0;\n            if(index > 0 && index < indexMax+2 && !moved) {\n                webgl.upCube(index-1);\n            }\n            if(indexCover > 0 && indexCover < indexMaxCover+2 && moved) {\n                webgl.upCubeCover(indexCover-1);\n            }\n        }\n        else if(e.keyCode == 40 && !playing) { // down\n            n = 0;\n            if(index > 0 && index < indexMax+2 && !moved) {\n                webgl.downCube(index-1);\n            }\n            if(indexCover > 0 && indexCover < indexMaxCover+2 && moved) {\n                webgl.downCubeCover(indexCover-1);\n            }\n        }\n        else if(e.keyCode == 32) { // space\n            n = 0;\n            if(!playing && controlsEnabled) {\n                playing = true;\n                index = 0;\n                //webgl.renderRotation();\n                timer = setInterval(function(){webgl.render(index++)}, 150);\n            }\n            else {\n                playing = false;\n            }\n        }\n        else if(e.keyCode == 13 && !sceneEnded) { //enter\n            n = 0;\n            if(!moved && movingEnabled) {\n                movingEnabled = false;\n                moved = true;\n                $('.pressEnter').html('Press enter to edit vinyl');\n                $('.pressEchap').html('Press esc to start a new vinyl');\n                // send to album cover\n                webgl.moveAway();\n            }\n            else if(moved && movingEnabled){\n                movingEnabled = false;\n                moved = false;\n                $('.pressEnter').html('Press enter to edit cover');\n                $('.pressEchap').html('');\n                webgl.moveForward();\n            }\n        }\n        else if(e.keyCode == 27 && moved && !sceneEnded) { // escape\n            n = 0;\n            sceneEnded = true;\n            $('.pressEnter').html('Press enter to edit cover');\n            $('.pressEchap').html('');\n            webgl.clearAllScene();\n        }\n    });\n\n    var textContent = $('.textContent');\n\n    textContent.css({\n        'margin-left': (window.innerWidth - 800)/2,\n        'margin-top': (window.innerHeight - 360)/2\n    });\n\n    $('.controls').css({\n        'margin-left': (window.innerWidth - 201)/2\n    });\n\n    $('.textControls').css({\n        'margin-left': (window.innerWidth - 800)/2\n    });\n\n    var colorArray = ['#4d73a0','#538ab2','#69acbc','#8fc4b5','#6ca995','#6ca995','#99e5cc',]\n    $('.textContent .title span').each(function() {\n        var randomIndex = Math.floor(Math.random() * (6 - 0 + 1));\n        $(this).css({\n            'color': colorArray[randomIndex]\n        });\n    });\n\n    TweenLite.to(textContent, 2, {css:{opacity:0}, ease:Power3.easeInOut, delay: 1, onComplete: displayVinyl});\n\n    \n    //webgl.renderStart();\n    animate();\n}\n\nfunction displayVinyl() {\n    $('.textContent').css({\n        \"display\": \"none\"\n    });\n\n    TweenLite.to($('.controls'), 2, {css:{opacity:1}, ease:Power3.easeInOut, onComplete: enableControls});\n    webgl.displayStart();\n}\n\nfunction animateTextControls() {\n    TweenLite.to($('.textControls'), 2, {css:{opacity:0.7}, ease:Power1.easeInOut, onComplete: hidetextControls});\n}\n\nfunction hidetextControls() {\n    TweenLite.to($('.textControls'), 2, {css:{opacity:0.2}, ease:Power1.easeInOut, onComplete: animateTextControls});\n}\n\nfunction enableControls() {\n    controlsEnabled = true;\n    if(!coverAlreadyAdded) {\n        coverAlreadyAdded = true;\n        webgl.scene.add(webgl.cover);\n    }\n    animateTextControls();\n}\n\nfunction resizeHandler() {\n    webgl.resize(window.innerWidth, window.innerHeight);\n    var textContent = $('.textContent');\n\n    textContent.css({\n        'margin-left': (window.innerWidth - 800)/2,\n        'margin-top': (window.innerHeight - 360)/2\n    });\n\n    $('.controls').css({\n        'margin-left': (window.innerWidth - 201)/2\n    });\n\n    $('.textControls').css({\n        'margin-left': (window.innerWidth - 800)/2\n    });\n\n}\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    if(playing || !mouseAlreadyMoved) {\n        webgl.renderRotation();\n    }\n    webgl.renderStart();\n}\n\nfunction mousewheel(e) {\n\tif(e.wheelDelta > 0) {\n\t\twebgl.camera.position.z += 10;\n\t}\n\telse if(e.wheelDelta < 0) {\n\t\twebgl.camera.position.z -= 10;\n\t}\n\twebgl.renderStart();\n}\n\nfunction mousemove(e) {\n    if(!mouseAlreadyMoved) {\n        mouseAlreadyMoved = true;\n    }\n    if(!playing) {\n        var xFromCenter = e.pageX - window.innerWidth/2;\n        var yFromCenter = e.pageY - window.innerHeight/2;\n        webgl.orientate(xFromCenter, yFromCenter);\n        //console.log(xFromCenter+'/'+yFromCenter);\n    }\n}\n","var Webgl = (function(){\n\n    function Webgl(width, height){\n        this.vinylRotation = 0;\n        // Basic three.js setup\n        this.scene = new THREE.Scene();\n        \n        this.camera = new THREE.PerspectiveCamera(50, width / height, 1, 10000);\n        this.camera.position.z = 200;\n        //this.camera.rotation.z += Math.PI*(0)/180;\n\n        var light = new THREE.PointLight(0xffffff, 1.3, 1000);\n        light.position.set(0, 25, 100);\n        this.scene.add(light);\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize(width, height);\n        this.renderer.setClearColor(0x2D2D2D);\n\n        var webgl = this;\n\n        // Glow scene\n        this.glowscene = new THREE.Scene();\n        this.glowscene.add(new THREE.AmbientLight(0xffffff));\n\n        $.ajax({\n            dataType: \"json\",\n            type: \"GET\",\n            url: \"./src/json/vinyl.json\",\n            success: function(data) {\n                webgl.vinyl = new Vinyl(data);\n            },\n            async: false\n        });\n\n        $.ajax({\n            dataType: \"json\",\n            type: \"GET\",\n            url: \"./src/json/cover.json\",\n            success: function(data) {\n                webgl.cover = new Cover(data);\n            },\n            async: false\n        });\n\n        this.scene.add(this.vinyl);\n        //this.scene.add(this.cover);\n\n        this.composer = new THREE.EffectComposer(this.renderer);\n        this.composer.addPass(new THREE.RenderPass(this.scene, this.camera));\n\n        this.glitchPass = new THREE.GlitchPass();\n        this.glitchPass.goWild = 10;\n        this.glitchPass.renderToScreen = true;\n        this.composer.addPass(this.glitchPass);\n    }\n\n    Webgl.prototype.resize = function(width, height) {\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(width, height);\n    };\n\n    Webgl.prototype.renderStart = function() {\n        this.renderer.render(this.scene, this.camera);\n        if(glitchActivated) {\n            this.composer.render();\n        }\n        //console.log('test');\n        if(!playing && ! sceneEnded) {\n            this.vinyl.rotation.z += (this.vinylRotation - this.vinyl.rotation.z)*0.1;\n        }\n    };\n\n    Webgl.prototype.render = function(index) {   \n        //console.log('test'); \n        //this.renderer.render(this.scene, this.camera);\n        //this.vinyl.update(0.1);\n        if(playing) {\n            this.vinyl.updateColor(index);\n        }\n        else {\n            clearInterval(timer);\n            this.vinyl.reset();\n        }\n    };\n\n    Webgl.prototype.renderRotation = function(index) {   \n        //console.log('test'); \n        this.vinyl.update(0.8);\n    };\n\n    Webgl.prototype.updateVinyl = function(degrees) {   \n        this.vinyl.update(degrees); \n    };\n\n    Webgl.prototype.goLeft = function(index) {\n        this.vinyl.goLeft(index);\n    };\n\n    Webgl.prototype.goRight = function(index) {\n        this.vinyl.goRight(index);\n    };\n\n    Webgl.prototype.goLeftCover = function(index) {\n        this.cover.goLeft(index);\n    };\n\n    Webgl.prototype.goRightCover = function(index) {\n        this.cover.goRight(index);\n    };\n\n    Webgl.prototype.upCube = function(index) {\n        this.vinyl.upCube(index);\n    };\n\n    Webgl.prototype.downCube = function(index) {\n        this.vinyl.downCube(index);\n    };\n\n    Webgl.prototype.upCubeCover = function(index) {\n        this.cover.upCube(index);\n    };\n\n    Webgl.prototype.downCubeCover = function(index) {\n        this.cover.downCube(index);\n    };\n\n    Webgl.prototype.orientate = function(x, y) {   \n        this.vinylRotation = (Math.PI*(((x*180)/window.innerWidth)+180)/180);\n        //this.vinyl.rotation.x = Math.PI*((y*10)/window.innerWidth)/180;;\n    };\n\n    Webgl.prototype.displayStart = function() {\n        var sound = document.getElementById(\"startup\");\n        sound.play();\n        TweenLite.to(this.vinyl.position, 2, {y:0, ease:Elastic.easeOut});\n    }\n\n    Webgl.prototype.moveAway = function() {\n        this.vinyl.moveAway();\n        this.cover.moveAway();\n    }\n\n    Webgl.prototype.moveForward = function() {\n        this.vinyl.moveForward();\n        this.cover.moveForward();\n    }\n\n    Webgl.prototype.clearAllScene = function() {\n        var webgl = this;\n\n        //this.vinyl.assembly();\n        var vinyl = this.vinyl;\n        TweenLite.to(vinyl.rotation, 2, {z: 0, ease: Power2.easeInOut});\n        TweenLite.to(vinyl.position, 2, {x: 0, ease: Power2.easeInOut, onComplete: webgl.clearVinyl, onCompleteParams: [vinyl]});\n\n        //this.cover.assembly();\n        var cover = this.cover;\n        TweenLite.to(cover.position, 2, {x: 0, ease: Power2.easeInOut, onComplete: webgl.clearCover, onCompleteParams: [cover, webgl]});\n\n/*        setTimeout(function(){webgl.restartVariables()}, 3000);\n        setTimeout(function(){webgl.restartVinyl()}, 4000);\n        setTimeout(function(){webgl.restartCover()}, 7000);\n*/    }\n\n    Webgl.prototype.clearVinyl = function(vinyl) {\n        TweenLite.to(vinyl.position, 2, {y:  window.innerHeight, ease: Power2.easeInOut});\n    }\n\n    Webgl.prototype.clearCover = function(cover, webgl) {\n        TweenLite.to(cover.position, 2, {y: window.innerHeight, ease: Power2.easeInOut, onComplete: webgl.restart, onCompleteParams: [webgl]});\n    }\n\n    Webgl.prototype.restart = function(webgl) {\n        webgl.restartVariables();\n        webgl.restartVinyl();\n        setTimeout(function(){webgl.restartCover()}, 2000);\n    }\n\n    Webgl.prototype.restartVinyl = function() {\n        //this.rotation.y += Math.PI*90/180;\n        this.vinyl.randomizeCubes();\n        this.vinyl.position.y = window.innerHeight/8;\n        this.vinyl.position.z = 0;\n        this.vinyl.rotation.x = Math.PI*(-60)/180;\n        this.vinyl.rotation.z = Math.PI*(180)/180;\n        this.displayStart();\n    }\n\n    Webgl.prototype.restartCover = function() {\n        this.cover.randomizeCubes();\n        this.cover.position.z = -600;\n        this.cover.position.y = 0;\n        this.cover.rotation.x += Math.PI*(60)/180;\n    }\n\n    Webgl.prototype.restartVariables = function() {\n        index = 0;\n        indexCover = 0;\n        indexMax = 79;\n        indexMaxCover = 143;\n        playing = false;\n        mouseAlreadyMoved = false;\n        controlsEnabled = true;\n        moved = false;\n        movingEnabled = true;\n        coverAlreadyAdded = false;\n        sceneEnded = false;\n    }\n\n    return Webgl;\n\n})();","var Cover = (function(){\n\n    function Cover(data){\n        THREE.Object3D.call(this);\n        this.cubeArray = [];\n        //this.length = data.length;\n        for (i = 0; i < data.length; i++) {\n            //console.log(data[i].x);\n            var myCube = new CubeCover(data[i].x, data[i].y, data[i].color);\n            this.cubeArray.push(myCube);\n            this.add(myCube);\n        }\n        this.position.z = -600;\n        this.rotation.x += Math.PI*(60)/180;\n    }\n\n    Cover.prototype = new THREE.Object3D;\n    Cover.prototype.constructor = Cover;\n\n    Cover.prototype.moveAway = function() {\n        cover = this;\n        TweenLite.to(cover.position, 2, {z: -300, ease: Power2.easeInOut});\n        TweenLite.to(cover.position, 2, {x: 100, ease: Power2.easeInOut});\n        TweenLite.to(cover.rotation, 2, {x: 0, ease: Power2.easeInOut});\n    }\n\n    Cover.prototype.moveForward = function() {\n        cover = this;\n        TweenLite.to(cover.position, 2, {z: -600, ease: Power2.easeInOut});\n        TweenLite.to(cover.position, 2, {x: 0, ease: Power2.easeInOut});\n        TweenLite.to(cover.rotation, 2, {x: Math.PI*(60)/180, ease: Power2.easeInOut});\n    }\n\n    Cover.prototype.goLeft = function(indexCover) {\n        //this.cubeArray[indexCover-2].setColor(0x000000);\n        this.cubeArray[indexCover-2].material.emissive = new THREE.Color(this.cubeArray[indexCover-2].color);\n        //this.cubeArray[indexCover-2].material.opacity = 0.8;\n        if(indexCover < indexMaxCover+2) {\n            var initialColor = this.cubeArray[indexCover-1].color;\n            this.cubeArray[indexCover-1].material.emissive = new THREE.Color(0x000000);\n            this.cubeArray[indexCover-1].material.color.setHex(initialColor);\n            this.cubeArray[indexCover-1].material.opacity = 1;\n        }\n    };\n\n    Cover.prototype.goRight = function(indexCover) {\n        //this.cubeArray[indexCover].setColor(0x000000);\n        this.cubeArray[indexCover].material.emissive = new THREE.Color(this.cubeArray[indexCover].color);\n        //this.cubeArray[indexCover].material.opacity = 0.8;\n        if(indexCover > 0) {\n            var initialColor = this.cubeArray[indexCover-1].color;\n            this.cubeArray[indexCover-1].material.emissive = new THREE.Color(0x000000);\n            this.cubeArray[indexCover-1].material.color.setHex(initialColor);\n            this.cubeArray[indexCover-1].material.opacity = 1;\n        }\n    };\n\n    Cover.prototype.upCube = function(indexCover) {\n        this.cubeArray[indexCover].upCube();\n        var initialColor = this.cubeArray[indexCover].color;\n        this.cubeArray[indexCover].material.emissive = new THREE.Color(this.cubeArray[indexCover].color);\n    };\n\n    Cover.prototype.downCube = function(indexCover) {\n        this.cubeArray[indexCover].downCube();\n        var initialColor = this.cubeArray[indexCover].color;\n        this.cubeArray[indexCover].material.emissive = new THREE.Color(this.cubeArray[indexCover].color);\n    };\n\n    Cover.prototype.assembly = function() {\n        var cover = this;\n        TweenLite.to(this.position, 2, {x: 0, ease: Power2.easeInOut, onComplete: cover.clear, onCompleteParams:[cover]});\n    };\n\n    Cover.prototype.clear = function(cover) {\n        TweenLite.to(cover.position, 2, {y: window.innerHeight, ease: Power2.easeInOut});\n    };\n\n    Cover.prototype.randomizeCubes = function() {\n        for(var i = 0; i < indexMaxCover+1; i++) {\n            this.cubeArray[i].randomize();\n        }\n    }\n\n    return Cover;\n})();","var Cube = (function(){\n\n    function Cube(posX, posY, depth, color){\n        \n        //console.log(posX+'/'+posY);\n        THREE.Object3D.call(this);\n        this.posX = posX;\n        this.posY = posY;\n        this.widthCube = 10;\n        this.heightCube = 10;\n        //this.depthCube = depth;\n        \n        if (color == \"white\") {\n            this.color = 0xffffff;\n            this.depthCube = 10;\n            modif = 0;\n        }\n        else {\n            //this.color = Math.random()*0xffffff;\n            this.depthCube = 10;\n            //modif = Math.floor(Math.random() * (21 - 7 + 1)) + 7;\n            modif = depth;\n            switch(modif) {\n                case 7:\n                    this.color = 0x28224a;\n                    break;\n\n                case 8:\n                    this.color = 0x59548f;\n                    break;\n\n                case 9:\n                    this.color = 0x2a2f56;\n                    break;\n\n                case 10:\n                    this.color = 0x2c446f;\n                    break;\n\n                case 11:\n                    this.color = 0x4d73a0;\n                    break;\n\n                case 12:\n                    this.color = 0x538ab2;\n                    break;\n\n                case 13:\n                    this.color = 0x69acbc;\n                    break;\n\n                case 14:\n                    this.color = 0x8fc4b5;\n                    break;\n\n                case 15:\n                    this.color = 0x6ca995;\n                    break;\n\n                case 16:\n                    this.color = 0x99e5cc;\n                    break;\n\n                case 17:\n                    this.color = 0x728164;\n                    break;\n\n                case 18:\n                    this.color = 0xa8cb7a;\n                    break;\n\n                case 19:\n                    this.color = 0xc9e986;\n                    break;\n\n                case 20:\n                    this.color = 0xa09d6b;\n                    break;\n\n                case 21:\n                    this.color = 0xb6b37b;\n                    break;\n\n                default:\n                    this.color = 0xcfcc97;\n                    break;\n            }\n        }\n\n        geometry = new THREE.BoxGeometry(this.widthCube, this.heightCube, this.depthCube);\n\n        this.material = new THREE.MeshPhongMaterial({\n            ambient: 0xffffff,\n            color: this.color,\n            specular: 0x000000,\n            shininess: 100000, \n            wireframe: false, \n            transparent: true, \n            shading: THREE.SmoothShading\n        });\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        this.mesh.scale.z += 0.01*modif;\n        this.depthCube = modif;\n        this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), ((this.depthCube/2)-this.widthCube/2));\n        //this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), 0);\n        this.add(this.mesh);\n    }\n\n    Cube.prototype = new THREE.Object3D;\n    Cube.prototype.constructor = Cube;\n\n    Cube.prototype.update = function() {\n        //this.mesh.rotation.y += 0.01;\n    };\n\n    Cube.prototype.setColor = function(hex) {\n        this.playSound(this.depthCube);\n    };\n\n    Cube.prototype.upCube = function() {\n        //console.log('upCube');\n        if(this.depthCube < 21) {\n            this.depthCube++;\n            //console.log(this.depthCube);\n            this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), (this.depthCube/2)-this.widthCube/2);\n            this.mesh.scale.z += 0.01;\n            this.playSound(this.depthCube);\n        }\n    };\n\n    Cube.prototype.downCube = function() {\n        //console.log('downCube');\n        if(this.depthCube > 7) {\n            this.depthCube--;\n            //console.log(this.depthCube);\n            this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), (this.depthCube/2)-this.widthCube/2);\n            this.mesh.scale.z -= 0.01;\n            this.playSound(this.depthCube);\n        }\n    };\n\n    Cube.prototype.playSound = function(note) {\n        switch(note) {\n            case 7:\n                this.color = 0x28224a;\n                idSound = \"blank\";\n                break;\n\n            case 8:\n                this.color = 0x59548f;\n                idSound = \"c\";\n                break;\n\n            case 9:\n                this.color = 0x2a2f56;\n                idSound = \"d\";\n                break;\n\n            case 10:\n                this.color = 0x2c446f;\n                idSound = \"e\";\n                break;\n\n            case 11:\n                this.color = 0x4d73a0;\n                idSound = \"f\";\n                break;\n\n            case 12:\n                this.color = 0x538ab2;\n                idSound = \"g\";\n                break;\n\n            case 13:\n                this.color = 0x69acbc;\n                idSound = \"a\";\n                break;\n\n            case 14:\n                this.color = 0x8fc4b5;\n                idSound = \"b\";\n                break;\n\n            case 15:\n                this.color = 0x6ca995;\n                idSound = \"c7\";\n                break;\n\n            case 16:\n                this.color = 0x99e5cc;\n                idSound = \"d7\";\n                break;\n\n            case 17:\n                this.color = 0x728164;\n                idSound = \"e7\";\n                break;\n\n            case 18:\n                this.color = 0xa8cb7a;\n                idSound = \"f7\";\n                break;\n\n            case 19:\n                this.color = 0xc9e986;\n                idSound = \"g7\";\n                break;\n\n            case 20:\n                this.color = 0xa09d6b;\n                idSound = \"a7\";\n                break;\n\n            case 21:\n                this.color = 0xb6b37b;\n                idSound = \"b7\";\n                break;\n\n            default:\n                this.color = 0x1d173d;\n                idSound = \"blank\";\n                break;\n        }\n        if(idSound == \"blank\") {\n            setTimeout(function(){},100);\n        }\n        else {\n            var sound = document.getElementById(idSound);\n            sound.play();\n            setTimeout(function(){sound.pause(); sound.currentTime = 0;},100);\n        }\n    }\n\n    Cube.prototype.resetColors = function() {\n        this.material.emissive = new THREE.Color(0x000000);\n    };\n\n    Cube.prototype.resetPosition = function() {\n        TweenLite.to(this.mesh.position, 2, {z: (this.depthCube/2)-this.widthCube/2, ease:Elastic.easeOut})\n    };\n\n    Cube.prototype.randomize = function() {\n        this.depthCube = Math.floor(Math.random() * (21 - 7 + 1)) + 7;\n        switch(this.depthCube) {\n            case 7:\n                this.color = 0x28224a;\n                break;\n\n            case 8:\n                this.color = 0x59548f;\n                break;\n\n            case 9:\n                this.color = 0x2a2f56;\n                break;\n\n            case 10:\n                this.color = 0x2c446f;\n                break;\n\n            case 11:\n                this.color = 0x4d73a0;\n                break;\n\n            case 12:\n                this.color = 0x538ab2;\n                break;\n\n            case 13:\n                this.color = 0x69acbc;\n                break;\n\n            case 14:\n                this.color = 0x8fc4b5;\n                break;\n\n            case 15:\n                this.color = 0x6ca995;\n                break;\n\n            case 16:\n                this.color = 0x99e5cc;\n                break;\n\n            case 17:\n                this.color = 0x728164;\n                break;\n\n            case 18:\n                this.color = 0xa8cb7a;\n                break;\n\n            case 19:\n                this.color = 0xc9e986;\n                break;\n\n            case 20:\n                this.color = 0xa09d6b;\n                break;\n\n            case 21:\n                this.color = 0xb6b37b;\n                break;\n\n            default:\n                this.color = 0xcfcc97;\n                break;\n        }\n        this.material.color.setHex(this.color);\n        this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), ((this.depthCube/2)-this.widthCube/2));\n    };\n\n    return Cube;\n})();","var CubeCover = (function(){\n\n    function CubeCover(posX, posY, color){\n        THREE.Object3D.call(this);\n        this.posX = posX;\n        this.posY = posY;\n        this.widthCube = 10;\n        this.heightCube = 10;\n        this.depthCube = 10;\n\n        if(color == 7) {\n            this.customColor = Math.floor(Math.random() * (9 - 7 + 1)) + 7;\n        }\n        else if(color == 12) {\n            this.customColor = Math.floor(Math.random() * (14 - 12 + 1)) + 12;\n        }\n\n        switch(this.customColor) {\n            case 7:\n                this.color = 0x28224a;\n                break;\n\n            case 8:\n                this.color = 0x59548f;\n                break;\n\n            case 9:\n                this.color = 0x2a2f56;\n                break;\n\n            case 10:\n                this.color = 0x2c446f;\n                break;\n\n            case 11:\n                this.color = 0x4d73a0;\n                break;\n\n            case 12:\n                this.color = 0x538ab2;\n                break;\n\n            case 13:\n                this.color = 0x69acbc;\n                break;\n\n            case 14:\n                this.color = 0x8fc4b5;\n                break;\n\n            case 15:\n                this.color = 0x6ca995;\n                break;\n\n            case 16:\n                this.color = 0x99e5cc;\n                break;\n\n            case 17:\n                this.color = 0x728164;\n                break;\n\n            case 18:\n                this.color = 0xa8cb7a;\n                break;\n\n            case 19:\n                this.color = 0xc9e986;\n                break;\n\n            case 20:\n                this.color = 0xa09d6b;\n                break;\n\n            case 21:\n                this.color = 0xb6b37b;\n                break;\n\n            default:\n                this.color = 0xcfcc97;\n                break;\n        }\n\n        geometry = new THREE.BoxGeometry(this.widthCube, this.heightCube, this.depthCube);\n\n        this.material = new THREE.MeshPhongMaterial({\n            ambient: 0xffffff,\n            color: this.color,\n            specular: 0x000000,\n            shininess: 100000, \n            wireframe: false, \n            transparent: true, \n            shading: THREE.SmoothShading\n        });\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), this.depthCube - (this.widthCube/2));\n        //this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), 0);\n        this.add(this.mesh);\n    }\n\n    CubeCover.prototype = new THREE.Object3D;\n    CubeCover.prototype.constructor = CubeCover;\n\n    CubeCover.prototype.upCube = function() {\n        //console.log('upCube');\n        if(this.customColor < 21) {\n            this.customColor++;\n            this.changeColor(this.customColor);\n        }\n    };\n\n    CubeCover.prototype.downCube = function() {\n        //console.log('downCube');\n        if(this.customColor > 7) {\n            this.customColor--;\n            this.changeColor(this.customColor);\n        }\n    };\n\n    CubeCover.prototype.changeColor = function(customColor) {\n        switch(customColor) {\n            case 7:\n                this.color = 0x28224a;\n                break;\n\n            case 8:\n                this.color = 0x59548f;\n                break;\n\n            case 9:\n                this.color = 0x2a2f56;\n                break;\n\n            case 10:\n                this.color = 0x2c446f;\n                break;\n\n            case 11:\n                this.color = 0x4d73a0;\n                break;\n\n            case 12:\n                this.color = 0x538ab2;\n                break;\n\n            case 13:\n                this.color = 0x69acbc;\n                break;\n\n            case 14:\n                this.color = 0x8fc4b5;\n                break;\n\n            case 15:\n                this.color = 0x6ca995;\n                break;\n\n            case 16:\n                this.color = 0x99e5cc;\n                break;\n\n            case 17:\n                this.color = 0x728164;\n                break;\n\n            case 18:\n                this.color = 0xa8cb7a;\n                break;\n\n            case 19:\n                this.color = 0xc9e986;\n                break;\n\n            case 20:\n                this.color = 0xa09d6b;\n                break;\n\n            case 21:\n                this.color = 0xb6b37b;\n                break;\n\n            default:\n                this.color = 0x1d173d;\n                break;\n        }\n    }\n\n    CubeCover.prototype.randomize = function() {\n        //var this.customColor = Math.floor(Math.random() * (21 - 7 + 1)) + 7;\n        this.customColor = 7;\n        switch(this.customColor) {\n            case 7:\n                this.color = 0x28224a;\n                break;\n\n            case 8:\n                this.color = 0x59548f;\n                break;\n\n            case 9:\n                this.color = 0x2a2f56;\n                break;\n\n            case 10:\n                this.color = 0x2c446f;\n                break;\n\n            case 11:\n                this.color = 0x4d73a0;\n                break;\n\n            case 12:\n                this.color = 0x538ab2;\n                break;\n\n            case 13:\n                this.color = 0x69acbc;\n                break;\n\n            case 14:\n                this.color = 0x8fc4b5;\n                break;\n\n            case 15:\n                this.color = 0x6ca995;\n                break;\n\n            case 16:\n                this.color = 0x99e5cc;\n                break;\n\n            case 17:\n                this.color = 0x728164;\n                break;\n\n            case 18:\n                this.color = 0xa8cb7a;\n                break;\n\n            case 19:\n                this.color = 0xc9e986;\n                break;\n\n            case 20:\n                this.color = 0xa09d6b;\n                break;\n\n            case 21:\n                this.color = 0xb6b37b;\n                break;\n\n            default:\n                this.color = 0xcfcc97;\n                break;\n        }\n        this.material.color.setHex(this.color);\n        this.mesh.position.set(this.posX*10 + (this.widthCube/2), this.posY*10 - (this.widthCube/2), ((this.depthCube/2)-this.widthCube/2));\n    };\n\n    return CubeCover;\n})();","var Vinyl = (function(){\n\n    function Vinyl(data){\n        THREE.Object3D.call(this);\n        this.cubeArray = [];\n        //this.length = data.length;\n        for (i = 0; i < data.length; i++) {\n            //console.log(data[i].x);\n            var myCube = new Cube(data[i].x, data[i].y, data[i].depth, data[i].color);\n            this.cubeArray.push(myCube);\n            this.add(myCube);\n        }\n        //this.rotation.y += Math.PI*90/180;\n        this.position.y = window.innerHeight/8;\n        this.rotation.x += Math.PI*(-60)/180;\n        this.rotation.z += Math.PI*(180)/180;\n    }\n\n    Vinyl.prototype = new THREE.Object3D;\n    Vinyl.prototype.constructor = Vinyl;\n\n    Vinyl.prototype.update = function(degrees) {\n\n        this.rotation.z += Math.PI*degrees/180;\n        if(this.rotation.z >= Math.PI*360/180) {\n            this.rotation.z -= Math.PI*360/180;\n        }\n    };\n\n    Vinyl.prototype.updateColor = function(index) {\n        if(index < this.cubeArray.length && this.cubeArray[index].color != 0xffffff) {\n            this.cubeArray[index].material.emissive = new THREE.Color(this.cubeArray[index].color);\n            //this.cubeArray[index].material.opacity = 0.8;\n            TweenLite.to(this.cubeArray[index].mesh.position, 2, {z:0, ease:Elastic.easeOut});\n            this.cubeArray[index].playSound(this.cubeArray[index].depthCube);\n        }\n        else {\n            playing = false;\n        }\n    };\n\n    Vinyl.prototype.goLeft = function(index) {\n        //this.cubeArray[index-2].setColor(0x000000);\n        this.cubeArray[index-2].material.emissive = new THREE.Color(this.cubeArray[index-2].color);\n        //this.cubeArray[index-2].material.opacity = 0.8;\n        this.cubeArray[index-2].setColor(initialColor);\n        if(index < indexMax+2) {\n            var initialColor = this.cubeArray[index-1].color;\n            this.cubeArray[index-1].material.emissive = new THREE.Color(0x000000);\n            this.cubeArray[index-1].material.color.setHex(initialColor);\n            this.cubeArray[index-1].material.opacity = 1;\n        }\n    };\n\n    Vinyl.prototype.goRight = function(index) {\n        //this.cubeArray[index].setColor(0x000000);\n        this.cubeArray[index].material.emissive = new THREE.Color(this.cubeArray[index].color);\n        //this.cubeArray[index].material.opacity = 0.8;\n        this.cubeArray[index].setColor(initialColor);\n        if(index > 0) {\n            var initialColor = this.cubeArray[index-1].color;\n            this.cubeArray[index-1].material.emissive = new THREE.Color(0x000000);\n            this.cubeArray[index-1].material.color.setHex(initialColor);\n            this.cubeArray[index-1].material.opacity = 1;\n        }\n    };\n\n    Vinyl.prototype.upCube = function(index) {\n        this.cubeArray[index].upCube();\n        var initialColor = this.cubeArray[index].color;\n        this.cubeArray[index].material.emissive = new THREE.Color(this.cubeArray[index].color);\n        this.cubeArray[index].setColor(initialColor);\n    };\n\n    Vinyl.prototype.downCube = function(index) {\n        this.cubeArray[index].downCube();\n        var initialColor = this.cubeArray[index].color;\n        this.cubeArray[index].material.emissive = new THREE.Color(this.cubeArray[index].color);\n        this.cubeArray[index].setColor(initialColor);\n    };\n\n    Vinyl.prototype.reset = function() {\n        controlsEnabled = true;\n        for(var i = 0; i < this.cubeArray.length; i++) {\n            index = 0;\n            this.cubeArray[i].resetColors();\n            this.cubeArray[i].resetPosition();\n        }\n    };\n\n    Vinyl.prototype.moveAway = function() {\n        var vinyl = this;\n        TweenLite.to(this.position, 2, {z: -310, ease: Power2.easeInOut});\n        TweenLite.to(this.position, 2, {x: -100, ease: Power2.easeInOut});\n        TweenLite.to(this.rotation, 2, {x: 0, ease: Power2.easeInOut, onComplete: vinyl.setMovingEnabled});\n    };\n\n    Vinyl.prototype.moveForward = function() {\n        var vinyl = this;\n        TweenLite.to(this.position, 2, {z: 0, ease: Power2.easeInOut});\n        TweenLite.to(this.position, 2, {x: 0, ease: Power2.easeInOut});\n        TweenLite.to(this.rotation, 2, {x: Math.PI*(-60)/180, ease: Power2.easeInOut, onComplete: vinyl.setMovingEnabled});\n    };\n\n    Vinyl.prototype.setMovingEnabled = function() {\n        movingEnabled = !movingEnabled;\n    }\n\n    Vinyl.prototype.assembly = function() {\n        var vinyl = this;\n        TweenLite.to(this.rotation, 2, {z: 0, ease: Power2.easeInOut});\n        TweenLite.to(this.position, 2, {x: 0, ease: Power2.easeInOut, onComplete: vinyl.clear, onCompleteParams:[vinyl]});\n    }\n\n    Vinyl.prototype.clear = function(vinyl) {\n        TweenLite.to(vinyl.position, 2, {y:  window.innerHeight, ease: Power2.easeInOut});\n    }\n\n    Vinyl.prototype.randomizeCubes = function() {\n        for(var i = 0; i < indexMax; i++) {\n            this.cubeArray[i].randomize();\n        }\n    }\n\n    return Vinyl;\n})();"],"sourceRoot":"/source/"}